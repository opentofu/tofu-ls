name: Release

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

permissions:
  contents: write

jobs:
  check-version-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get tag version
        id: tag
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Get file version
        id: file
        run: echo "version=$(cat version/VERSION)" >> $GITHUB_OUTPUT
      - name: Compare versions
        run: |
          if [ "${{ steps.tag.outputs.version }}" != "${{ steps.file.outputs.version }}" ]; then
            echo "Tag version (${{ steps.tag.outputs.version }}) does not match file version (${{ steps.file.outputs.version }})"
            exit 1
          fi
          echo "Version check passed: ${{ steps.tag.outputs.version }}"

  goreleaser:
    needs: check-version-file
    runs-on: ubuntu-latest
    env:
      flags: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine Go version
        id: go
        uses: ./.github/actions/go-version
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go.outputs.version }}
          cache: true
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean ${{ env.flags }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
